; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[common]
arduino_core_2_6_3 = espressif8266@2.3.3
arduino_core_2_7_4 = espressif8266@2.6.2
arduino_core_3_0_0 = espressif8266@3.0.0
arduino_core_3_0_2 = espressif8266@3.2.0
arduino_core_3_1_0 = espressif8266@4.1.0
arduino_core_3_1_2 = espressif8266@4.2.1

# Development platforms
arduino_core_develop = https://github.com/platformio/platform-espressif8266#develop
arduino_core_git = https://github.com/platformio/platform-espressif8266#feature/stage

platform_packages = platformio/toolchain-xtensa @ ~2.100300.220621 #2.40802.200502
                    platformio/tool-esptool #@ ~1.413.0
                    platformio/tool-esptoolpy #@ ~1.30000.0

debug_flags = -D DEBUG=1
  -DDEBUG_ESP_WIFI -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_UPDATE -DDEBUG_ESP_HTTP_SERVER -DDEBUG_ESP_UPDATER -DDEBUG_ESP_OTA -DDEBUG_TLS_MEM ;; for esp8266

build_flags =
  -DMQTT_MAX_PACKET_SIZE=1024
  -DSECURE_CLIENT=SECURE_CLIENT_BEARSSL
  -DBEARSSL_SSL_BASIC
  -D CORE_DEBUG_LEVEL=0
  -D NDEBUG
  -Wno-attributes
  -D _IR_ENABLE_DEFAULT_=false
  -D DECODE_HASH=true
  -D DECODE_NEC=true
  -D DECODE_SONY=true
  -D DECODE_SAMSUNG=true
  -D DECODE_LG=true

build_unflags =

ldscript_1m128k = eagle.flash.1m128.ld
ldscript_2m512k = eagle.flash.2m512.ld
ldscript_2m1m = eagle.flash.2m1m.ld
ldscript_4m1m = eagle.flash.4m1m.ld

[scripts_defaults]
extra_scripts =
  pre:pio-scripts/set_envs.py
  post:pio-scripts/output_bins.py 
  post:pio-scripts/strip-floats.py

[env]
framework = arduino
board_build.flash_mode = dout
monitor_speed = 115200
lib_compat_mode = strict
lib_deps =
    QuickESPNow
    marvinroger/AsyncMqttClient@^0.9.0
    ArduinoJson
extra_scripts = ${scripts_defaults.extra_scripts}


[esp32]
platform = espressif32
build_flags = -g
  -DARDUINO_ARCH_ESP32
  -D CONFIG_ASYNC_TCP_USE_WDT=0
  -D LOROL_LITTLEFS
tiny_partitions = partitions/ESP32_2MB_noOTA.csv
default_partitions = partitions/ESP32_4MB_1MB_FS.csv
extended_partitions = partitions/ESP32_4MB_700k_FS.csv
big_partitions = partitions/ESP32_4MB_256KB_FS.csv
large_partitions = partitions/ESP32_8MB.csv
extreme_partitions = partitions/ESP32_16MB_9MB_FS.csv
lib_deps =
  ${env.lib_deps}

[esp8266]
build_flags =
  -DESP8266
  -DFP_IN_IROM
  -Wno-misleading-indentation
  -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703
  -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
  -DVTABLES_IN_FLASH
  -DMIMETYPE_MINIMAL
  -D PIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48

lib_deps =
    ${env.lib_deps}


[env:esp32dev]
platform = ${esp32.platform}
board = esp32dev
framework = ${env.framework}
lib_deps = ${esp32.lib_deps}
board_build.partitions = ${esp32.big_partitions}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} ${esp32.build_flags} ${common.debug_flags} -D WIZMOTE_RELEASE_NAME=ESP32
monitor_filters = esp32_exception_decoder


[env:esp8266_2m]
board = esp_wroom_02
platform = ${common.arduino_core_3_1_2}
platform_packages = ${common.platform_packages}
board_build.ldscript = ${common.ldscript_2m512k}
build_unflags = ${common.build_unflags}
build_flags = ${common.build_flags} ${esp8266.build_flags} -D WIZMOTE_RELEASE_NAME=ESP8266
lib_deps = ${esp8266.lib_deps}

